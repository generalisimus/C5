
import os
import random
import json
import codecs
from bottle import route, run



def generator():
    beginnings = [
        "Коллеги, ",
        "В то же время, ",
        "Однако, ",
        "Тем не менее, ",
        "Следовательно, ",
        "Соответственно, ",
        "Вместе с тем, ",
        "С другой стороны, ",
    ]
    subjects = [
        "парадигма цифровой экономики ",
        "контекст цифровой трансформации ",
        "диджитализация бизнес-процессов ",
        "прагматичный подход к цифровым платформам ",
        "совокупность сквозных технологий ",
        "программа прорывных исследований ",
        "ускорение блокчейн-транзакций ",
        "экспоненциальный рост Big Data ",
    ]
    verbs = [
        "открывает новые возможости для ",
        "выдвегает новые требования ",
        "несет в себе риски ",
        "расширяет горизонты ",
        "заставляет искать варианты ",
        "не остовляет шанса для ",
        "повышает вероятность ",
        "обостряет проблему ",
    ]
    actions = [
        "дальнейшего углубления ",
        "бюджетного финансирования ",
        "синергетического эффекта ",
        "компрометации конфиденциальных ",
        "универсальной коммодитизации ",
        "несанкционированной кастомизации ",
        "нормативного регулирования ",
        "практического применения ",
    ]
    ends = [
        "знаний и компетенции.",
        "непроверенных гипотиз.",
        "волактильных активов.",
        "опасных эксперементов.",
        "государственно-частных партнерств.",
        "цифровых следов граждан.",
        "нежелательных последствий.",
        "внезапных открытий.",
    ]

    loader = ''.join(random.choices(beginnings) + \
        random.choices(subjects) + \
        random.choices(verbs) + \
        random.choices(actions) + \
        random.choices(ends))
    
    ready = json.dumps({'messages': loader})
    text = codecs.decode(ready, 'unicode_escape')

    return text


@route("/api/generate/")
def index():
    html = """
<!doctype html>
<html lang="en">
  <head>
    <title>Генератор утверждений</title>
  </head>
  <body>
    <div class="container">
      <h1>Коллеги, добрый день!</h1>
      <p>{}</p>
      <p class="small">Чтобы обновить это заявление, обновите страницу</p>
    </div>
  </body>
</html>
""".format(
        generator()
    )
    return html

def many_generate(some_id):
    beginnings = [
        "Коллеги, ",
        "В то же время, ",
        "Однако, ",
        "Тем не менее, ",
        "Следовательно, ",
        "Соответственно, ",
        "Вместе с тем, ",
        "С другой стороны, ",
    ]
    subjects = [
        "парадигма цифровой экономики ",
        "контекст цифровой трансформации ",
        "диджитализация бизнес-процессов ",
        "прагматичный подход к цифровым платформам ",
        "совокупность сквозных технологий ",
        "программа прорывных исследований ",
        "ускорение блокчейн-транзакций ",
        "экспоненциальный рост Big Data ",
    ]
    verbs = [
        "открывает новые возможости для ",
        "выдвегает новые требования ",
        "несет в себе риски ",
        "расширяет горизонты ",
        "заставляет искать варианты ",
        "не остовляет шанса для ",
        "повышает вероятность ",
        "обостряет проблему ",
    ]
    actions = [
        "дальнейшего углубления ",
        "бюджетного финансирования ",
        "синергетического эффекта ",
        "компрометации конфиденциальных ",
        "универсальной коммодитизации ",
        "несанкционированной кастомизации ",
        "нормативного регулирования ",
        "практического применения ",
    ]
    ends = [
        "знаний и компетенции.",
        "непроверенных гипотиз.",
        "волактильных активов.",
        "опасных эксперементов.",
        "государственно-частных партнерств.",
        "цифровых следов граждан.",
        "нежелательных последствий.",
        "внезапных открытий.",
    ]

    some_id = int(some_id)
    n =[]
    i = 1

    while i < some_id:
        loader = ''.join(random.choices(beginnings) + \
            random.choices(subjects) + \
            random.choices(verbs) + \
            random.choices(actions) + \
            random.choices(ends) )
        i = i + 1
        n.append(loader)
    ready = json.dumps({'messages': n})
    text = codecs.decode(ready, "unicode_escape")
    
    return text


@route("/api/generate/<some_id:int>")
def index(some_id):

    html = """
<!doctype html>
<html lang="en">
  <head>
    <title>Генератор утверждений</title>
  </head>
  <body>
    <div class="container">
      <h1>Коллеги, добрый день!</h1>
      <p>{}</p>
      <p class="small">Чтобы обновить это заявление, обновите страницу</p>
    </div>
  </body>
</html>
""".format(
        many_generate(some_id) 
    )
    return html

if os.environ.get("APP_LOCATION") == "heroku":
    run(
        host="0.0.0.0",
        port=int(os.environ.get("PORT", 5000)),
        server="gunicorn",
        workers=3,
    )
else:
    run(host="localhost", port=8080, debug=True)
